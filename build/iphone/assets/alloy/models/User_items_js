var Alloy=require("alloy"),_=require("alloy/underscore")._,model,collection;exports.definition={config:{columns:{id:"INTEGER PRIMARY KEY AUTOINCREMENT",u_id:"INTEGER",i_id:"INTEGER",action:"TEXT",status:"INTEGER",updated:"TEXT",created:"TEXT"},adapter:{type:"sql",collection_name:"user_items",idAttribute:"id"}},extendModel:function(e){return _.extend(e.prototype,{}),e},extendCollection:function(e){return _.extend(e.prototype,{getData:function(){var e=this,t="SELECT * FROM userItems where status = 1";db=Ti.Database.open(e.config.adapter.db_name),"android"!=Ti.Platform.osname&&db.file.setRemoteBackup(!1);for(var i=db.execute(t),a=[],o=0;i.isValidRow();)a[o]={id:i.fieldByName("id"),u_id:i.fieldByName("u_id"),i_id:i.fieldByName("i_id"),action:i.fieldByName("action"),status:i.fieldByName("status")},i.next(),o++;return i.close(),db.close(),e.trigger("sync"),a},calculate_distance:function(){var e=this,t="SELECT * FROM "+e.config.adapter.collection_name+" where distance = '' OR distance IS NULL";db=Ti.Database.open(e.config.adapter.db_name),"android"!=Ti.Platform.osname&&db.file.setRemoteBackup(!1);for(var i=Ti.App.Properties.getString("longitude")||0,a=Ti.App.Properties.getString("latitude")||0,o=db.execute(t),r=0;o.isValidRow();)lon1=o.fieldByName("longitude"),lat1=o.fieldByName("latitude"),countDistanceByKM(lon1,lat1,i,a),o.next(),r++;Ti.App.fireEvent("app:update_loading_text",{text:"Calculating distance..."}),Ti.App.fireEvent("app:next_loading")},saveArray:function(e){console.log("item save array"),console.log(e);var t=this;db=Ti.Database.open(t.config.adapter.db_name),"android"!=Ti.Platform.osname&&db.file.setRemoteBackup(!1),db.execute("BEGIN"),e.forEach(function(e){var i="INSERT OR IGNORE INTO "+t.config.adapter.collection_name+" (id, owner_id, receiver_id, item_name, item_desc, item_category, longitude, latitude, status, created, updated, owner_name, owner_img_path, img_path) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";db.execute(i,e.id,e.owner_id,e.receiver_id,e.item_name,e.item_desc,e.item_category,e.longitude,e.latitude,e.status,e.created,e.updated,e.owner_name,e.owner_img_path,e.img_path);var i="UPDATE "+t.config.adapter.collection_name+" SET owner_id=?, receiver_id=?, item_name=?, item_desc=?, item_category=?, longitude=?, latitude=?, status=?, created=?, updated=?, owner_name=?, owner_img_path=?, img_path=? WHERE id=?";db.execute(i,e.owner_id,e.receiver_id,e.item_name,e.item_desc,e.item_category,e.longitude,e.latitude,e.status,e.created,e.updated,e.owner_name,e.owner_img_path,e.img_path,e.id)}),db.execute("COMMIT"),db.close(),t.trigger("sync")},markRead:function(e){var t=this,i=Ti.App.Properties.getString("user_id");db=Ti.Database.open(t.config.adapter.db_name),"android"!=Ti.Platform.osname&&db.file.setRemoteBackup(!1);var a="INSERT OR IGNORE INTO "+t.config.adapter.collection_name+" (u_id, i_id, action, status, updated, created) VALUES (?,?,?,?,?,?)";db.execute(a,i,e.id,e.action,1,Common.now(),Common.now()),db.close(),t.trigger("sync")},saveRecord:function(e){var t=this;db=Ti.Database.open(t.config.adapter.db_name),"android"!=Ti.Platform.osname&&db.file.setRemoteBackup(!1);var i="INSERT OR IGNORE INTO "+t.config.adapter.collection_name+" (id, owner_id, receiver_id, item_name, item_desc, item_category, longitude, latitude, status, created, updated, owner_name, owner_img_path, img_path) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";db.execute(i,e.id,e.owner_id,e.receiver_id,e.item_name,e.item_desc,e.item_category,e.longitude,e.latitude,e.status,e.created,e.updated,e.owner_name,e.owner_img_path,e.img_path);var i="UPDATE "+t.config.adapter.collection_name+" SET owner_id=?, receiver_id=?, item_name=?, item_desc=?, item_category=?, longitude=?, latitude=?, status=?, created=?, updated=?, owner_name=?, owner_img_path, img_path=? WHERE id=?";db.execute(i,e.owner_id,e.receiver_id,e.item_name,e.item_desc,e.item_category,e.longitude,e.latitude,e.status,e.created,e.updated,e.owner_name,e.owner_img_path,e.img_path,e.id),db.close(),t.trigger("sync")}}),e}};var countDistanceByKM=function(e,t,i,a){var o=6371,r=(i-e)*Math.PI/180,l=(a-t)*Math.PI/180,n=Math.sin(r/2)*Math.sin(r/2)+Math.cos(e*Math.PI/180)*Math.cos(i*Math.PI/180)*Math.sin(l/2)*Math.sin(l/2),s=2*Math.atan2(Math.sqrt(n),Math.sqrt(1-n)),d=o*s;return d>1?Math.round(d):1>=d?Math.round(1e3*d)+"m":d};model=Alloy.M("user_items",exports.definition,[]),collection=Alloy.C("user_items",exports.definition,model),exports.Model=model,exports.Collection=collection;